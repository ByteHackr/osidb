# Generated by Django 3.2.19 on 2023-07-11 12:04

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('osidb', '0080_alter_flawacknowledgment_affiliation'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlawCVSS',
            fields=[
                ('created_dt', models.DateTimeField(blank=True)),
                ('updated_dt', models.DateTimeField(blank=True)),
                ('_alerts', models.JSONField(blank=True, default=dict)),
                ('acl_read', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), default=list, size=None)),
                ('acl_write', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), default=list, size=None)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vector', models.CharField(max_length=100)),
                ('version', models.CharField(choices=[('V2', 'version 2'), ('V3', 'version 3')], max_length=10)),
                ('issuer', models.CharField(choices=[('RH', 'Red Hat'), ('NIST', 'NIST')], max_length=16)),
                ('comment', models.TextField(blank=True)),
                ('score', models.FloatField(default=0)),
                ('flaw', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cvss_scores', to='osidb.flaw')),
            ],
        ),
        migrations.CreateModel(
            name='AffectCVSS',
            fields=[
                ('created_dt', models.DateTimeField(blank=True)),
                ('updated_dt', models.DateTimeField(blank=True)),
                ('_alerts', models.JSONField(blank=True, default=dict)),
                ('acl_read', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), default=list, size=None)),
                ('acl_write', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), default=list, size=None)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vector', models.CharField(max_length=100)),
                ('version', models.CharField(choices=[('V2', 'version 2'), ('V3', 'version 3')], max_length=10)),
                ('issuer', models.CharField(choices=[('RH', 'Red Hat'), ('NIST', 'NIST')], max_length=16)),
                ('comment', models.TextField(blank=True)),
                ('score', models.FloatField(default=0)),
                ('affect', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cvss_scores', to='osidb.affect')),
            ],
        ),
        migrations.AddConstraint(
            model_name='flawcvss',
            constraint=models.UniqueConstraint(fields=('flaw', 'version', 'issuer'), name='unique CVSS of a Flaw'),
        ),
        migrations.AddConstraint(
            model_name='affectcvss',
            constraint=models.UniqueConstraint(fields=('affect', 'version', 'issuer'), name='unique CVSS of an Affect'),
        ),
    ]
