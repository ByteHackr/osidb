# Generated by Django 3.2.12 on 2022-04-05 12:24

import bugzilla
from django.db import migrations
from django.conf import settings

from collectors.bzimport.constants import (
    BZ_API_KEY,
    BZ_URL,
)
from osidb.core import set_user_acls


def chunks(iterable):
    """yield successive n-sized chunks from iterable"""
    # chunk by 20 because python-bugzilla can only fetch 20 bugs at a time...
    for i in range(0, len(iterable), 20):
        yield iterable[i : i + 20]


def correct_created_updated_dt(apps, schema_editor):
    # unlike in a local dev env, ACLs apply even when performing
    # migrations, thus we need to set them
    set_user_acls(settings.PUBLIC_READ_GROUPS + [
        settings.PUBLIC_WRITE_GROUP,
        settings.EMBARGO_READ_GROUP,
        settings.EMBARGO_WRITE_GROUP,
    ])
    Flaw = apps.get_model("osidb", "Flaw")
    db_alias = schema_editor.connection.alias
    bz_api = bugzilla.Bugzilla(BZ_URL, api_key=BZ_API_KEY, force_rest=True)

    all_flaws = Flaw.objects.using(db_alias).all()
    for flaws in chunks(all_flaws):
        bugs = bz_api.getbugs(
            [int(flaw.meta_attr["bz_id"]) for flaw in flaws],
            include_fields=['creation_time', 'last_change_time'],
        )
        for flaw, bug in zip(flaws, bugs):
            # must be done with a QuerySet update otherwise the auto_now,
            # auto_now_add features of these fields will override the value
            # if done with save()
            Flaw.objects.using(db_alias).filter(pk=flaw.pk).update(
                created_dt=bug.creation_time,
                updated_dt=bug.last_change_time,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('osidb', '0029_pscontact_psproduct_psmodule_psupdatestream'),
    ]

    operations = [
        migrations.RunPython(correct_created_updated_dt),
    ]
